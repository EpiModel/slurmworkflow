[{"path":"https://epimodel.github.io/slurmworkflow/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Adrien LE GUILLOU Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"slurmworkflow","text":"HPC using slurm workload manager work slurmworkflow. HPC tested: Emory’s RSPH HPC (vignette) Washington’s HYAK HPC highly recommend using renv working HPC.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"creating-a-new-workflow","dir":"Articles","previous_headings":"","what":"Creating a New Workflow","title":"slurmworkflow","text":"First create new workflow called “test_slurmworkflow” store summary wf object. second argument specifies default step run “epimodel” partition send mail “user@emory.edu” step fails. Calling create_workflow() result creation workflow directory: “workflows/test_slurmworkflow/” contains code send HPC. workflow summary returned stored wf variable. ’ll use add elements workflow.","code":"library(slurmworkflow)  wf <- create_workflow(   wf_name = \"test_slurmworkflow\",   default_sbatch_opts = list(     \"partition\" = \"epimodel\",     \"mail-type\" = \"FAIL\",     \"mail-user\" = \"user@emory.edu\"   ) )"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"adding-a-step-to-the-workflow","dir":"Articles","previous_headings":"","what":"Adding a Step to the Workflow","title":"slurmworkflow","text":"first step use workflows ensures local project HPC sync. add_workflow_step() functions takes three arguments: wf_summary: object made create_workflow(), indicating onto workflow want add step. step_tmpl: step template, helper function defining run HPC (latter). sbatch_opts: arguments passed sbatch. specify want 16GB RAM, 4 CPUs job take 120 minutes. default options defined create_workflow() also used. step template using , step_tmpl_bash_lines() takes vector bash lines run sbatch HPC. tell step : 1. run git pull 2. load version spack load R@4.2.1 module 3. ensure renv initialized project (effect already case) 4. update packages match renv.lock file","code":"wf <- add_workflow_step(   wf_summary = wf,   step_tmpl = step_tmpl_bash_lines(c(     \"git pull\",     \". /projects/epimodel/spack/share/spack/setup-env.sh\",     \"spack load r@4.2.1\",     \"Rscript -e \\\"renv::init(bare = TRUE)\\\"\",     \"Rscript -e \\\"renv::restore()\\\"\"   )),   sbatch_opts = list(     \"mem\" = \"16G\",     \"cpus-per-task\" = 4,     \"time\" = 120   ) )"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"running-r-code-directly","dir":"Articles","previous_headings":"","what":"Running R Code directly","title":"slurmworkflow","text":"usually want run R code bash, slurmworkflow provides step templates simplifying process. HPCs, R usually available directly. RSPH HPC use spack manage modules. Therefore, store lines used setup R HPC variable used R step templates.","code":"setup_lines <- c(   \". /projects/epimodel/spack/share/spack/setup-env.sh\",   \"spack load r@4.2.1\" )"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"run-code-from-an-r-script","dir":"Articles","previous_headings":"Running R Code directly","what":"Run Code From an R Script","title":"slurmworkflow","text":"next step run following script HPC. simple script prints content var1 var2 standard output. Note variables never declared script. pass arguments step template. second part checks existence file called “did_run”. exist yet, ’s created instruct slurmworkflow change next step current step. make loop slurmworkflow. file exists, means ’s second time step run, removes . case change_next_workflow_step() called workflow just continue next step. Let’s now see add script workflow step. use add_workflow_step() function. change step_tmpl use step_tmpl_do_call_script() 3 arguments: r_script: path script run. “R/01-test_do_call.R”. Note path must valid HPC. args: list variables available step. var1 var2 missing script. setup_lines: bash code run trying source script. lines used load R module defined earlier. sbatch options, ask 1 CPU, 4GB RAM maximum 10 minutes.","code":"# filename: R/01-test_do_call.R cat(paste0(\"var1 = \", var1, \", var2 = \", var2))  if (!file.exists(\"did_run\")) {   file.create(\"did_run\")   current_step <- slurmworkflow::get_current_workflow_step()   slurmworkflow::change_next_workflow_step(current_step) } else {   file.remove(\"did_run\") } wf <- add_workflow_step(   wf_summary = wf,   step_tmpl = step_tmpl_do_call_script(     r_script = \"R/01-test_do_call.R\",     args = list(var1 = \"ABC\", var2 = \"DEF\"),     setup_lines = setup_lines   ),   sbatch_opts = list(     \"cpus-per-task\" = 1,     \"time\" = \"00:10:00\",     \"mem\" = \"4G\"   ) )"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"iterating-over-values-in-an-r-script","dir":"Articles","previous_headings":"Running R Code directly","what":"Iterating Over Values in an R Script","title":"slurmworkflow","text":"One common task HPC run code many time vary value arguments. typical R session lapply(), Map() Mapply() available purpose. slurmworkflow provides step_tmpl_map_script() run script syntax similar Map() function. create array job element input processed parallel. First let’s take look script run. script needs 4 undeclared variables: - iterator1 iterator2: varying values - ncores, var1 var2: fixed values shared replications values set step template. script print parallel message ncores. Now addition step. step_tmpl_map_script() takes r_script argument similar step_tmpl_do_call_script(). next two arguments iterator1 iterator2 iterated using sbatch arrays. replication job one value (1-6, 2-7, 3-8, 4-9 5-10). Similar Map(), MoreArgs argument defines variables shared across replication. new argument max_array_size set 2. prevents array jobs size 2. case, submissions array sizes 2, 2, 1. real analysis situation, value around 500. argument prevents slurm refusing job submission size array (limit 1000 submission common). EpiModel already cases 30000 array jobs run. template simply submit sequential chunks 500 sbatch_opts specified mem-per-cpu = \"4G\". means change cores_to_use value, memory asked scale well. recap, step submit array 5 jobs, receiving different value iterator1 iterator2. theses jobs run cores_to_use. use approach EpiModel run huge arrays jobs job set around 30 parallel simulations. Therefore, 2 levels parallelization. One slurm one script .","code":"# filename: R/02-test_map.R library(future.apply) plan(multicore, workers = ncores)  future_lapply(seq_len(ncores), function(i) {   msg <- paste0(     \"On core: \", i, \"\\n\",     \"iterator1: \", iterator1, \"\\n\",     \"iterator2: \", iterator2, \"\\n\",     \"var1 = \", var1, \", var2 = \", var2, \"\\n\\n\"   )   cat(msg) }) cores_to_use <- 2  wf <- add_workflow_step(   wf_summary = wf,   step_tmpl = step_tmpl_map_script(     r_script = \"R/02-test_map.R\",     # arguments passed to the script     iterator1 = seq_len(5),     iterator2 = seq_len(5) + 5,     MoreArgs = list(       ncores = cores_to_use,       var1 = \"IJK\",       var2 = \"LMN\"     ),     setup_lines = setup_lines,     max_array_size = 2   ),   sbatch_opts = list(     \"cpus-per-task\" = cores_to_use,     \"time\" = \"00:10:00\",     \"mem-per-cpu\" = \"4G\"   ) )"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"running-an-r-function-directly","dir":"Articles","previous_headings":"Running R Code directly","what":"Running an R Function Directly","title":"slurmworkflow","text":"Sometimes want run simple function directly without storing R script. step_tmpl_do_call() step_tmpl_map() exactly one-functions Map()s. syntax two templates almost identical previous two discussed. main difference first argument pass function instead path script. Note: function run clean R session HPC. values used function must either created , loaded passed argument. Finally, last step, override mail-type sbatch_opts receive mail step finishes, whatever outcome. way receive mail telling us workflow finished.","code":"wf <- add_workflow_step(   wf_summary = wf,   step_tmpl = step_tmpl_do_call(     what = function(var1, var2) {       cat(paste0(\"var1 = \", var1, \", var2 = \", var2))     },     args = list(var1 = \"XYZ\", var2 = \"UVW\"),     setup_lines = setup_lines   ),   sbatch_opts = list(     \"cpus-per-task\" = 1,     \"time\" = \"00:10:00\",     \"mem\" = \"4G\",     \"mail-type\" = \"END\"   ) )"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"using-the-workflow-on-an-hpc","dir":"Articles","previous_headings":"","what":"Using the Workflow on an HPC","title":"slurmworkflow","text":"Now workflow created actually run code HPC? assume working project called “test_proj”, project cloned HPC following path: “~/projects/test_proj” “~/projects/test_proj/workflows/” directory exists.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"sending-the-workflow-to-the-hpc","dir":"Articles","previous_headings":"Using the Workflow on an HPC","what":"Sending the Workflow to the HPC","title":"slurmworkflow","text":"following commands run local computer. MacOS GNU/Linux Windows Forgetting set DISPLAY= prevent scp working correctly using RStudio terminal. Note ’s workflows\\networks_estimation. Windows uses back-slashes directories Unix OSes uses forward-slashes.","code":"# bash - local scp -r workflows/test_slurmworkflow <user>@clogin01.sph.emory.edu:projects/test_proj/workflows/ # bash - local set DISPLAY= scp -r workflows\\test_slurmworkflow <user>@clogin01.sph.emory.edu:projects/test_proj/workflows/"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"running-the-workflow-from-the-hpc","dir":"Articles","previous_headings":"Using the Workflow on an HPC > Sending the Workflow to the HPC","what":"Running the Workflow From the HPC","title":"slurmworkflow","text":"step, must command line HPC. means run: ssh <user>@clogin01.sph.emory.edu local computer. run set DISPLAY= Windows get error: ssh_askpass: posix_spawnp: file directory also need root directory project (“.git” folder well “renv.lock” file”. example get running cd ~/projects/test_proj. following steps work root project. Running workflow done executing file “workflows/estimation/start_workflow.sh” following command: using Windows, may executable. can solve following command: workflow work source file (source <script> . <script>). can check state running workflow usual squeue -u <user>. logs workflows “workflows/test_slurmworkflow/log/”.","code":"# bash - hpc ./workflows/test_slurmworkflow/start_workflow.sh # bash - hpc chmod +x workflows/test_slurmworkflow/start_workflow.sh`"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"the-start_workflow-sh-script","dir":"Articles","previous_headings":"Using the Workflow on an HPC","what":"The “start_workflow.sh” Script","title":"slurmworkflow","text":"start script additionally allows start workflow specific step -s argument. start workflow 3rd step. Skipping steps 1 2. sometimes desirable start workflow outside project run . -d argument allows set different working directory workflow. previous block places us root file system cd /. call “start_workflow.sh” script using absolute path specify working directory workflow must root project. Remember renv work, R must called directory “.Rprofile” file . ’s directory can also find “renv.lock” file.","code":"# bash - hpc ./workflows/test_slurmworkflow/start_workflow.sh -s 3 # bash - hpc cd / ~/projects/test_proj/workflows/test_slurmworkflow/start_workflow.sh -d ~/projects/test_proj"},{"path":"https://epimodel.github.io/slurmworkflow/articles/slurmworkflow.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"slurmworkflow","text":"slurmworkflow low level package providing basic building blocks complex HPC computation. package used EpiModel applied projects higher level functions EpiModelHPC swfcalib, automated calibration system used models (WIP).","code":""},{"path":"https://epimodel.github.io/slurmworkflow/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adrien Le Guillou. Author, maintainer.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Le Guillou (2023). slurmworkflow: Build workflows Slurm workload manager. R package version 0.1.0, https://epimodel.github.io/slurmworkflow/.","code":"@Manual{,   title = {slurmworkflow: Build workflows for the Slurm workload manager},   author = {Adrien {Le Guillou}},   year = {2023},   note = {R package version 0.1.0},   url = {https://epimodel.github.io/slurmworkflow/}, }"},{"path":"https://epimodel.github.io/slurmworkflow/index.html","id":"slurmworkflow","dir":"","previous_headings":"","what":"Build workflows for the Slurm workload manager","title":"Build workflows for the Slurm workload manager","text":"slurmworkflow solves issue running multiple inter-dependant jobs slurm equipped HPC without long lived job persistent SSH session. workflow predefined set steps (sbatchs) executed HPC. default steps run sequentially. slurmworkflow provides tools altering execution order, allowing conditional execution steps loop like behavior.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Build workflows for the Slurm workload manager","text":"can install slurmworkflow :","code":"remotes::install_github(\"EpiModel/slurmworkflow\")"},{"path":"https://epimodel.github.io/slurmworkflow/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Build workflows for the Slurm workload manager","text":"See test package package vignette detailed explanation.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/add_workflow_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Step to an Existing Workflow — add_workflow_step","title":"Add a Step to an Existing Workflow — add_workflow_step","text":"Add Step Existing Workflow","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/add_workflow_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Step to an Existing Workflow — add_workflow_step","text":"","code":"add_workflow_step(wf_summary, step_tmpl, sbatch_opts = NULL, step_name = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/add_workflow_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Step to an Existing Workflow — add_workflow_step","text":"wf_summary workflow summary object step_tmpl step template function, see Step Template section details. sbatch_opts named list sbatch options overwrite complement default ones (default = NULL). (see SBATCH Options section details). step_name optional name step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/add_workflow_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Step to an Existing Workflow — add_workflow_step","text":"updated workflow summary","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/add_workflow_step.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Add a Step to an Existing Workflow — add_workflow_step","text":"step template function factory used simplify setup step. slurmworkflow package provides several simple ones like step_tmpl_bash_script takes bash script run argument step_tmpl_r_script takes R script run argument optional setup_script load required modules beforehand.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/add_workflow_step.html","id":"sbatch-options","dir":"Reference","previous_headings":"","what":"SBATCH Options","title":"Add a Step to an Existing Workflow — add_workflow_step","text":"sbatch_opts named list accepts existing arguments sbatch. works long form (e.g. \"job-name\" instead \"J\"). full list arguments available sbacth documentation. arguments like \"mem\", \"mem-per-cpu\" \"mem-per-gpu\" mutually exclusive, providing multiple result error. However, one set creation workflow default_sbatch_opts (e.g. \"mem\") another addition step sbatch_opts (e.g. \"mem-per-gpu\"), second one used.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/add_workflow_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Step to an Existing Workflow — add_workflow_step","text":"","code":"if (FALSE) { wf <- add_workflow_step(   step_tmpl_r_script(r_script = \"R/abce-abc.R\", setup_script = \"loadR.sh\"),   sbatch_opts = list(     \"mem-per-cpu\" = \"4G\",     \"cpus-per-task\" = 28,     \"time\" = 500   ),   step_name = \"abc\" ) }"},{"path":"https://epimodel.github.io/slurmworkflow/reference/change_next_workflow_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Alter the Next Step of a Running Workflow — change_next_workflow_step","title":"Alter the Next Step of a Running Workflow — change_next_workflow_step","text":"function allows running job alter workflow sequence choosing step run current one. (See vignette(\"altering--order--steps\"))","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/change_next_workflow_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alter the Next Step of a Running Workflow — change_next_workflow_step","text":"","code":"change_next_workflow_step(next_step, sbatch_opts = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/change_next_workflow_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alter the Next Step of a Running Workflow — change_next_workflow_step","text":"next_step scalar number coercible integer instructing workflow system step run next sbatch_opts optional named list sbatch parameters override ones specified next_step next iteration","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/change_next_workflow_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alter the Next Step of a Running Workflow — change_next_workflow_step","text":"next_step value (invisibly)","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/change_next_workflow_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alter the Next Step of a Running Workflow — change_next_workflow_step","text":"","code":"if (FALSE) {  # Instruct the workflow to run the step 3 after this one  change_next_workflow_step(3)   # Instruct the workflow to run the previous step after this one  change_next_workflow_step(get_current_workflow_step() - 1) }"},{"path":"https://epimodel.github.io/slurmworkflow/reference/create_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a New Workflow — create_workflow","title":"Create a New Workflow — create_workflow","text":"Create new workflow, set directory return summary object","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/create_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a New Workflow — create_workflow","text":"","code":"create_workflow(wf_name, default_sbatch_opts, wf_common_dir = \"workflows\")"},{"path":"https://epimodel.github.io/slurmworkflow/reference/create_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a New Workflow — create_workflow","text":"wf_name Name new workflow default_sbatch_opts named list default sbatch options workflow. \"partition\" options mandatory. (see SBATCH Options section details). wf_common_dir Path directory store workflows (default = \"workflows\").","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/create_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a New Workflow — create_workflow","text":"new workflow summary","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/create_workflow.html","id":"sbatch-options","dir":"Reference","previous_headings":"","what":"SBATCH Options","title":"Create a New Workflow — create_workflow","text":"sbatch_opts named list accepts existing arguments sbatch. works long form (e.g. \"job-name\" instead \"J\"). full list arguments available sbacth documentation. arguments like \"mem\", \"mem-per-cpu\" \"mem-per-gpu\" mutually exclusive, providing multiple result error. However, one set creation workflow default_sbatch_opts (e.g. \"mem\") another addition step sbatch_opts (e.g. \"mem-per-gpu\"), second one used.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/create_workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a New Workflow — create_workflow","text":"","code":"if (FALSE) { wf <- create_workflow(   wf_name = \"dummy-workflow\",   default_sbatch_opts = list(     \"partition\" = \"dummy_part\",     \"account\" = \"dummy_account\"   ),   wf_common_dir = \"workflows\" ) }"},{"path":"https://epimodel.github.io/slurmworkflow/reference/get_current_workflow_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Number of the Currently Running Step of a Workflow — get_current_workflow_step","title":"Get the Number of the Currently Running Step of a Workflow — get_current_workflow_step","text":"Get Number Currently Running Step Workflow","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/get_current_workflow_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Number of the Currently Running Step of a Workflow — get_current_workflow_step","text":"","code":"get_current_workflow_step()"},{"path":"https://epimodel.github.io/slurmworkflow/reference/get_current_workflow_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Number of the Currently Running Step of a Workflow — get_current_workflow_step","text":"current_step value","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/get_workflow_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Root Directory of a Workflow — get_workflow_root","title":"Get the Root Directory of a Workflow — get_workflow_root","text":"function get path root directory workflow. Either local workflow execution workflow HPC","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/get_workflow_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Root Directory of a Workflow — get_workflow_root","text":"","code":"get_workflow_root(wf_summary = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/get_workflow_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Root Directory of a Workflow — get_workflow_root","text":"wf_summary workflow summary returned creation obtained swf_load_workflow. provided, function assumes workflow running HPC pulls value using environment variables.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/get_workflow_root.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Root Directory of a Workflow — get_workflow_root","text":"path workflow root directory","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/helper_use_setup_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function to Consistently Write Setup Lines — helper_use_setup_lines","title":"Helper Function to Consistently Write Setup Lines — helper_use_setup_lines","text":"Helper Function Consistently Write Setup Lines","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/helper_use_setup_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function to Consistently Write Setup Lines — helper_use_setup_lines","text":"","code":"helper_use_setup_lines(instructions, setup_lines)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/helper_use_setup_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function to Consistently Write Setup Lines — helper_use_setup_lines","text":"instructions Vector bash lines run workflow step setup_lines Vector bash lines run rest step instructions. @return modified instructions","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/helper_write_instructions.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function to Consistently Write Instructions to the Instruction Script — helper_write_instructions","title":"Helper Function to Consistently Write Instructions to the Instruction Script — helper_write_instructions","text":"Helper Function Consistently Write Instructions Instruction Script","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/helper_write_instructions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function to Consistently Write Instructions to the Instruction Script — helper_write_instructions","text":"","code":"helper_write_instructions(instructions, instructions_script)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/helper_write_instructions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function to Consistently Write Instructions to the Instruction Script — helper_write_instructions","text":"instructions Vector bash lines run workflow step instructions_script Path instructions script","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/load_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a Workflow Summary From a Workflow Folder or the Environment — load_workflow","title":"Load a Workflow Summary From a Workflow Folder or the Environment — load_workflow","text":"Load Workflow Summary Workflow Folder Environment","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/load_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a Workflow Summary From a Workflow Folder or the Environment — load_workflow","text":"","code":"load_workflow(wf_root = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/load_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a Workflow Summary From a Workflow Folder or the Environment — load_workflow","text":"wf_root Path workflow directory. provided, function assumes workflow running HPC pulls value using environment variables.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/load_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a Workflow Summary From a Workflow Folder or the Environment — load_workflow","text":"workflow summary","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/simple_brew.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace a Line in a File With New Lines — simple_brew","title":"Replace a Line in a File With New Lines — simple_brew","text":"function used complete templates provided package user provided informations","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/simple_brew.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace a Line in a File With New Lines — simple_brew","text":"","code":"simple_brew(file_in, placeholder_line, replacement_lines, file_out = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/simple_brew.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace a Line in a File With New Lines — simple_brew","text":"file_in file read placeholder_line line replace replacement_lines character vector lines insert file file_out path new file (default \"file_in\" missing)","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/simple_brew.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace a Line in a File With New Lines — simple_brew","text":"path output file (invisibly)","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/slurmworkflow-package.html","id":null,"dir":"Reference","previous_headings":"","what":"slurmworkflow: Build workflows for the Slurm workload manager — slurmworkflow-package","title":"slurmworkflow: Build workflows for the Slurm workload manager — slurmworkflow-package","text":"slurmworkflow makes possible locally pre-define set jobs run slurm equipped HPC. workflow set steps run HPC (sequentially default). slurmworkflow provides tools alter execution order, allowing conditional execution steps loop like behavior.","code":""},{"path":[]},{"path":"https://epimodel.github.io/slurmworkflow/reference/slurmworkflow-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"slurmworkflow: Build workflows for the Slurm workload manager — slurmworkflow-package","text":"Maintainer: Adrien Le Guillou contact@aleguillou.org (ORCID)","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Step Template to Run Bash Statements — step_tmpl_bash_lines","title":"Step Template to Run Bash Statements — step_tmpl_bash_lines","text":"Step Template Run Bash Statements","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step Template to Run Bash Statements — step_tmpl_bash_lines","text":"","code":"step_tmpl_bash_lines(bash_lines)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step Template to Run Bash Statements — step_tmpl_bash_lines","text":"bash_lines Vector bash lines run workflow step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step Template to Run Bash Statements — step_tmpl_bash_lines","text":"template function used add_workflow_step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_lines.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Step Template to Run Bash Statements — step_tmpl_bash_lines","text":"Step Templates helper functions used within add_workflow_step. basic ones provided slurmworkflow package. instruct workflow run either bash script, set bash lines given character vector R script. Additional Step Templates can created simplify specific tasks, see vignette(\"making--custom-step-template\") details.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Step Template to Run a Bash Script — step_tmpl_bash_script","title":"Step Template to Run a Bash Script — step_tmpl_bash_script","text":"Step Template Run Bash Script","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step Template to Run a Bash Script — step_tmpl_bash_script","text":"","code":"step_tmpl_bash_script(bash_script)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step Template to Run a Bash Script — step_tmpl_bash_script","text":"bash_script Path script run workflow step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step Template to Run a Bash Script — step_tmpl_bash_script","text":"template function used add_workflow_step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_bash_script.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Step Template to Run a Bash Script — step_tmpl_bash_script","text":"Step Templates helper functions used within add_workflow_step. basic ones provided slurmworkflow package. instruct workflow run either bash script, set bash lines given character vector R script. Additional Step Templates can created simplify specific tasks, see vignette(\"making--custom-step-template\") details.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Step Template to Run an R Function — step_tmpl_do_call","title":"Step Template to Run an R Function — step_tmpl_do_call","text":"step template uses syntax similar base::.call function run function workflow step. must make sure variables required function passed either one arguments loaded later function .","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step Template to Run an R Function — step_tmpl_do_call","text":"","code":"step_tmpl_do_call(what, args, setup_lines = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step Template to Run an R Function — step_tmpl_do_call","text":"R function run workflow step args list arguments function call. names attribute args gives argument names. setup_lines (optional) vector bash lines run first. can used load required modules (like R, python, etc).","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step Template to Run an R Function — step_tmpl_do_call","text":"template function used add_workflow_step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Step Template to Run an R Function — step_tmpl_do_call","text":"Step Templates helper functions used within add_workflow_step. basic ones provided slurmworkflow package. instruct workflow run either bash script, set bash lines given character vector R script. Additional Step Templates can created simplify specific tasks, see vignette(\"making--custom-step-template\") details.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_do_call_script","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_do_call_script","text":"Step Template Run R Script Set Arguments","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_do_call_script","text":"","code":"step_tmpl_do_call_script(r_script, args = list(), setup_lines = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_do_call_script","text":"r_script R script run workflow step args list arguments function call. names attribute args gives argument names. setup_lines (optional) vector bash lines run first. can used load required modules (like R, python, etc).","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_do_call_script","text":"template function used add_workflow_step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_do_call_script.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_do_call_script","text":"Step Templates helper functions used within add_workflow_step. basic ones provided slurmworkflow package. instruct workflow run either bash script, set bash lines given character vector R script. Additional Step Templates can created simplify specific tasks, see vignette(\"making--custom-step-template\") details.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Step Template to Run an R Function With a Set of Arguments — step_tmpl_map","title":"Step Template to Run an R Function With a Set of Arguments — step_tmpl_map","text":"step template uses syntax similar base::Map / base::mapply functions run function given set arguments workflow step. must make sure variables required function passed either one arguments loaded later function .","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step Template to Run an R Function With a Set of Arguments — step_tmpl_map","text":"","code":"step_tmpl_map(   FUN,   ...,   MoreArgs = NULL,   setup_lines = NULL,   max_array_size = Inf )"},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step Template to Run an R Function With a Set of Arguments — step_tmpl_map","text":"FUN R function run workflow step ... arguments vectorize (vectors lists strictly positive length, zero length).  See also ‘Details’. MoreArgs list arguments function call. names attribute args gives argument names. setup_lines (optional) vector bash lines run first. can used load required modules (like R, python, etc). max_array_size maximum number array jobs submitted time. strictly less maximum number jobs allowed submit slurm HPC.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step Template to Run an R Function With a Set of Arguments — step_tmpl_map","text":"template function used add_workflow_step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Step Template to Run an R Function With a Set of Arguments — step_tmpl_map","text":"Step Templates helper functions used within add_workflow_step. basic ones provided slurmworkflow package. instruct workflow run either bash script, set bash lines given character vector R script. Additional Step Templates can created simplify specific tasks, see vignette(\"making--custom-step-template\") details.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_map_script","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_map_script","text":"Step Template Run R Script Set Arguments","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_map_script","text":"","code":"step_tmpl_map_script(r_script, ..., MoreArgs = NULL, setup_lines = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_map_script","text":"r_script R script run workflow step ... arguments vectorize (vectors lists strictly positive length, zero length).  See also ‘Details’. MoreArgs list arguments function call. names attribute args gives argument names. setup_lines (optional) vector bash lines run first. can used load required modules (like R, python, etc).","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_map_script","text":"template function used add_workflow_step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_map_script.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Step Template to Run an R Script With a Set of Arguments — step_tmpl_map_script","text":"Step Templates helper functions used within add_workflow_step. basic ones provided slurmworkflow package. instruct workflow run either bash script, set bash lines given character vector R script. Additional Step Templates can created simplify specific tasks, see vignette(\"making--custom-step-template\") details.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_rscript.html","id":null,"dir":"Reference","previous_headings":"","what":"Step Template to Run an R Script — step_tmpl_rscript","title":"Step Template to Run an R Script — step_tmpl_rscript","text":"Contrary step_tmpl_do_call_script, function copies content script workflow folder. Therefore, script exist HPC using template.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_rscript.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step Template to Run an R Script — step_tmpl_rscript","text":"","code":"step_tmpl_rscript(r_script, setup_lines = NULL)"},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_rscript.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step Template to Run an R Script — step_tmpl_rscript","text":"r_script R script run workflow step setup_lines (optional) vector bash lines run first. can used load required modules (like R, python, etc).","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_rscript.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Step Template to Run an R Script — step_tmpl_rscript","text":"template function used add_workflow_step","code":""},{"path":"https://epimodel.github.io/slurmworkflow/reference/step_tmpl_rscript.html","id":"step-template","dir":"Reference","previous_headings":"","what":"Step Template","title":"Step Template to Run an R Script — step_tmpl_rscript","text":"Step Templates helper functions used within add_workflow_step. basic ones provided slurmworkflow package. instruct workflow run either bash script, set bash lines given character vector R script. Additional Step Templates can created simplify specific tasks, see vignette(\"making--custom-step-template\") details.","code":""},{"path":"https://epimodel.github.io/slurmworkflow/news/index.html","id":"slurmworkflow-010","dir":"Changelog","previous_headings":"","what":"slurmworkflow 0.1.0","title":"slurmworkflow 0.1.0","text":"First stable release","code":""}]
