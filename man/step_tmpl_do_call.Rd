% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_templates.R
\name{step_tmpl_do_call}
\alias{step_tmpl_do_call}
\title{Step Template to Run an R Function}
\usage{
step_tmpl_do_call(what, args, setup_lines = NULL)
}
\arguments{
\item{what}{The R function to be run by the workflow step}

\item{args}{a \emph{list} of arguments to the function call. The \code{names}
attribute of \code{args} gives the argument names.}

\item{setup_lines}{(optional) a vector of bash lines to be run first.
This can be used to load the required modules (like R, python, etc).}
}
\value{
a template function to be used by \code{add_workflow_step}
}
\description{
This step template uses a syntax similar to the \code{base::do.call} function to
run a function as a workflow step. You must make sure that all variables
required by the function are passed to it either as one of its arguments or
loaded later by the function itself.
}
\section{Step Template}{

Step Templates are helper functions to be used within \code{add_workflow_step}.
Some basic ones are provided by the \code{slurmworkflow} package. They instruct
the workflow to run either a bash script, a set of bash lines given as a
character vector or an R script.
Additional Step Templates can be created to simplify specific tasks. The
easiest way to do so is as wrappers around existing templates.
}

